<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://jeonghongki.github.io/</id><title>Coco's blog</title><subtitle>Java, Android, C, C++, Flutter</subtitle> <updated>2023-05-01T22:22:49+09:00</updated> <author> <name>jeonghongki</name> <uri>https://jeonghongki.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://jeonghongki.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko" href="https://jeonghongki.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2023 jeonghongki </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>[Android] 뷰 아키텍처</title><link href="https://jeonghongki.github.io/posts/Android-VIew-Architect/" rel="alternate" type="text/html" title="[Android] 뷰 아키텍처" /><published>2023-04-29T00:00:00+09:00</published> <updated>2023-05-01T00:00:00+09:00</updated> <id>https://jeonghongki.github.io/posts/Android-VIew-Architect/</id> <content src="https://jeonghongki.github.io/posts/Android-VIew-Architect/" /> <author> <name>jeonghongki</name> </author> <category term="Android" /> <summary> Android 뷰 아키텍처 Android 뷰 계층구조 Android 뷰의 계층구조 알아보기 뷰의 기본 구조는 뷰 객체간 계층으로 이루어져 있으며 SW모델로 이야기하면 DOM(Document Object Model)을 따르고 있으며 디자인 패턴으로는 Gof 디자인 패턴의 Composite 패턴이 적용된 구조이다. DOM(Document Object Model) DOM(Document Object Model)은 문서 객체 모델을 의미한다. HTML, XML과 같은 마크업 언어로 작성된 문서의 구조와 내용에 대한 표현을 기반으로 객체 모델을 구성하는 방식으로 트리 구조로 이루어져 있다. 이 트리 구조는 문서의 각 요소들을 객체로 표현하여 구성되며 각 객체들은 각 요소들이 가지는 속성/메소드를 포함한다. D... </summary> </entry> <entry><title>[Android] 안드로이드 컴포넌트 기반 개발</title><link href="https://jeonghongki.github.io/posts/Android-Component/" rel="alternate" type="text/html" title="[Android] 안드로이드 컴포넌트 기반 개발" /><published>2023-04-23T00:00:00+09:00</published> <updated>2023-04-23T00:00:00+09:00</updated> <id>https://jeonghongki.github.io/posts/Android-Component/</id> <content src="https://jeonghongki.github.io/posts/Android-Component/" /> <author> <name>jeonghongki</name> </author> <category term="Android" /> <summary> Android 앱 아키텍처 특징 Android 컴포넌트 Android 컴포넌트란? 컴포넌트는 앱의 구성단위로 안드로이드 앱을 작성한다는 것은 컴포넌트를 작성한다는 것과 동일하다. 안드로이드에서 컴포넌트의 물리적인 모습은 Class(클래스)로 하나의 클래스가 컴포넌트이다. 단, 모든 클래스가 컴포넌트인 것은 아니다. 일반 클래스와 컴포넌트로 구분할 수 있는데 이 둘의 차이는 생명주기를 누가 관리하는지로 구분할 수 있다. 일반 클래스 - 코드로 생명주기를 관리한다. 즉, 필요할 때 new 연산자로 생성, 필요 없어지면 null대입으로 소멸시킨다. 컴포넌트 - 생명주기를 안드로이드 시스템이 생성해 관리 및 소멸함 컴포넌트 = 앱 내 독립적 실행단위 컴포넌트도 클래스이므로 시스템이 생명주기를 관리... </summary> </entry> <entry><title>[Android] 안드로이드 플랫폼 아키텍처</title><link href="https://jeonghongki.github.io/posts/Android-Platform-Architect/" rel="alternate" type="text/html" title="[Android] 안드로이드 플랫폼 아키텍처" /><published>2023-03-11T00:00:00+09:00</published> <updated>2023-03-19T00:00:00+09:00</updated> <id>https://jeonghongki.github.io/posts/Android-Platform-Architect/</id> <content src="https://jeonghongki.github.io/posts/Android-Platform-Architect/" /> <author> <name>jeonghongki</name> </author> <category term="Android" /> <summary> Android 앱 개발 특징 Android 플랫폼 아키텍처 Android 아키텍처 기본적인 안드로이드 플랫폼 아키텍처는 아래와 같다. 안드로이드 소프트웨어 스택(출처: https://developer.android.com/guide/platform) 안드로이드 플랫폼은 리눅스 커널 기반이며 HAL(Hardware Abstaction Layer)은 자바 API프레임워크에 하드웨어 기능을 이용하는 표준 인터페이스를 제공한다. System Apps: Android Appplication 개발에 필요한 API를 제공, 일반적인 Application이 해당 계층에 속함 (ex, SMS, Email, Calendar Application 등…), Android Application Layer로 ... </summary> </entry> </feed>
